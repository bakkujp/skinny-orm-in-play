(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";
var TweetService = require('./TweetService').default;
var TwitterController = require('./TwitterController').default;

var services = angular.module('twitter.services', [])
  .service('TweetService', TweetService);

var controllers = angular.module('twitter.controllers', [])
  .controller('TwitterController', TwitterController);

exports.default = angular.module('twitter', [
  services.name,
  controllers.name
]);



},{"./TweetService":2,"./TwitterController":3}],2:[function(require,module,exports){
"use strict";

var _classProps = function(child, staticProps, instanceProps) {
  if (staticProps)
    Object.defineProperties(child, staticProps);

  if (instanceProps)
    Object.defineProperties(child.prototype, instanceProps);
};

exports.default = function() {
  var TweetService = function TweetService($http) {
    this.$http = $http;
  };

  _classProps(TweetService, null, {
    findAll: {
      writable: true,

      value: function() {
        return this.$http.get('/tweets');
      }
    },

    findAllByUserId: {
      writable: true,

      value: function(userId) {
        return this.$http.get('/users/' + userId + '/tweets');
      }
    },

    post: {
      writable: true,

      value: function(tweet) {
        return this.$http.post('/tweets', tweet);
      }
    },

    deleteByTweetId: {
      writable: true,

      value: function(tweetId) {
        return this.$http.delete('/tweets/' + tweetId);
      }
    }
  });

  return TweetService;
}();



},{}],3:[function(require,module,exports){
"use strict";

var _classProps = function(child, staticProps, instanceProps) {
  if (staticProps)
    Object.defineProperties(child, staticProps);

  if (instanceProps)
    Object.defineProperties(child.prototype, instanceProps);
};

exports.default = function() {
  var TwitterController = function TwitterController($http, $window, TweetService) {
    this.newTweet = {userName: 'Kaz'};
    this.validationErrors = [];
    this.$window = $window;
    this.service = TweetService;
  };

  _classProps(TwitterController, null, {
    refreshTimeline: {
      writable: true,

      value: function() {
        var _this = this;
        this.service.findAll().success(function(tweets) {
          _this.tweets = tweets;
        });
      }
    },

    postTweet: {
      writable: true,

      value: function(newTweet) {
        var _this2 = this;
        this.service.post(newTweet).success(function(data) {
          _this2.newTweet.text = null;
          _this2.validationErrors = [];
          _this2.refreshTimeline();
        }).error(function(errors) {
          _this2.validationErrors = errors;
          _this2.refreshTimeline();
        });
      }
    },

    showTweetsForUser: {
      writable: true,

      value: function(user) {
        var _this3 = this;
        this.service.findAllByUserId(user.id).success(function(tweets) {
          _this3.userInModal = user;
          _this3.userInModal.tweets = tweets;
          $('#myModal').modal('toggle');
        });
      }
    },

    deleteTweet: {
      writable: true,

      value: function(tweet) {
        var _this4 = this;
        this.service.deleteByTweetId(tweet.id).success(function(res) {
          _this4.refreshTimeline();
        }).error(function(res) {
          _this4.$window.alert('Failed to delete tweet!');
          _this4.refreshTimeline();
        });
      }
    }
  });

  return TwitterController;
}();



},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,
